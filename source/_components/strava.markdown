---
layout: page
title: "Strava"
description: "Instructions on how to add Strava sensors."
date: 2019-03-27 10:00
sidebar: true
comments: false
sharing: true
footer: true
logo: strava.png
ha_category:
  - Sensor
  - Health
ha_release: 0.93
ha_iot_class: Cloud Polling
---

The [Strava](https://www.strava.com/) Strava component for Home Assistant allows you to integrate statistiscs from your Strava activitities.

There is currently support for the following device types within Home Assistant:

- [Sensor](#sensor)

## Example

![Strava Sensors](/images/components/strava/strava_sensors.png)

## {% linkable_title Setup %}

In order to configure the `strava` platform, a OAuth2 client id and secret need to be generated by via the [Strava developer page](https://www.strava.com/settings/api).

Please ensure that the "Authorization callback domain" is set to the IP address or domain name at which your Home Assistant isntallation is reachable. However, it does not need to be publicy reachable.

![Strava Developer Application](/images/components/strava/strava_developer_application.png)

Copy the client id and secret from the Strava developer page into your Home Assistant configuration:

```yaml
# Example configuration.yaml entry
strava:
  client_id: YOUR_CLIENT_ID
  client_secret: YOUR_CLIENT_SECRET
```

{% configuration %}
client_id:
  description: The OAuth client id of your Strava application.
  required: true
  type: sting
client_secret:
  description: The OAuth client secret of your Strava application.
  required: true
  type: sting
{% endconfiguration %}

## {% linkable_title Sensor %}

Each athlete sensor is configured with the `athlete` keyword.
If they key is not present or has the value `me`, the currently logged-in athlete is used.

Gear and Club sensors are references using their numeric IDs which can be extracted from strava.com.

### Athelete Details Sensors

Check out the [`stravalib.model.Athlete`](https://pythonhosted.org/stravalib/api.html#stravalib.model.Athlete) documentation for full list of supported fields.

```yaml
sensor:
  - platform: strava
    athlete: me
    fields:
      - follower_count
      - friend_count
      - weight
```

### Athlete Statistics Sensors

Check out the [`stravalib.model.AthleteStats`](https://pythonhosted.org/stravalib/api.html#stravalib.model.AthleteStats) documentation for full list of supported fields.

There are the following groups of statistics:

- `recent_run_totals`
- `recent_ride_totals`
- `ytd_ride_totals`
- `ytd_run_totals`
- `all_ride_totals`
- `all_ride_totals`

And the following two scalar statistics:

- biggest_ride_distance
- biggest_climb_elevation_gain

```yaml
sensor:
  - platform: strava
    athlete: me
    stats:
      - biggest_ride_distance
      - biggest_climb_elevation_gain
      - recent_run_totals.achievement_count
      - recent_run_totals.count
      - recent_run_totals.distance
      - recent_run_totals.elapsed_time
      - recent_run_totals.elevation_gain
      - recent_run_totals.moving_time
```

### Last Activity Sensors

Check out the [`stravalib.model.Activity`](https://pythonhosted.org/stravalib/api.html#stravalib.model.Activity) documentation for full list of supported fields.

```yaml
sensor:
  - platform: strava
    athlete: me
    last_activity:
      - distance
      - moving_time
      - elapsed_time
      - total_elevation_gain
      - type
      - achievement_count
      - pr_count
      - kudos_count
      - comment_count
      - athlete_count
      - total_photo_count
      - commute
      - manual
      - private
      - flagged
      - average_speed
      - max_speed
      - device_watts
      - has_kudoed
      - average_watts
      - max_watts
      - suffer_score
      - average_heartrate
      - max_heartrate
      - average_cadence
      - kilojoules
      - device_name
      - calories
      - workout_type
```

### Gear Sensors

#### Shoes

Check out the [`stravalib.model.Shoe`](https://pythonhosted.org/stravalib/api.html#stravalib.model.Shoe) documentation for full list of supported fields.

```yaml
sensor:
  - platform: strava
    shoe: 4403312
    fields:
      - name
      - distance
      - primary
      - brand_name
      - model_name
      - description
```

#### Bikes

Check out the [`stravalib.model.Bike`](https://pythonhosted.org/stravalib/api.html#stravalib.model.Bike) documentation for full list of supported fields.

```yaml
sensor:
  - platform: strava
    bike: 5683777
    fields:
      - name
      - distance
      - primary
      - brand_name
      - model_name
      - frame_type
```

### Club Sensors

Check out the [`stravalib.model.Club`](https://pythonhosted.org/stravalib/api.html#stravalib.model.Club) documentation for full list of supported fields.

```yaml
sensor:
  - platform: strava
    club: 483278
    fields:
      - name
      - description
      - club_type
      - sport_type
      - city
      - state
      - country
      - private
      - member_count
      - url
```

# Embedding Strava Map into Lovelace

File `config/ui-lovelace.yaml`:
```yaml
resources:
  - url: /local/strava-activity-card.js
    type: js
views:
  - name: Strava
    cards:
    - type: custom:strava-activity-card
      entity: sensor.last_activity_embed_token
```

File `config/configuration.yml`:
```yaml
lovelace:
  mode: yaml

sensor:
  - platform: strava
    athlete: me
    last_activity:
      - embed_token
```


File `config/www/strava-activty-card.js`:
```js
class StravaActivityCard extends HTMLElement {
    set hass(hass) {
      if (!this.content) {
        const card = document.createElement('ha-card');
        this.content = document.createElement('iframe');
        this.content.style.border = 'none';
        this.content.style.width = '100%';
        this.content.style.height = '100%';
        card.appendChild(this.content);
        card.style.height = '400px';
        this.appendChild(card);
      }
  
      const entityId = this.config.entity;
      const state = hass.states[entityId];
      const activityId = state.attributes['activity_id'];
      const embedToken = state.state;

      if (state && this.activityId != activityId)
        this.content.setAttribute('src', 'https://www.strava.com/activities/' + activityId + '/embed/' + embedToken);
        this.activityId = activityId;
    }
  
    setConfig(config) {
      if (!config.entity) {
        throw new Error('You need to define an entity');
      }
      this.config = config;
    }

    getCardSize() {
      return 8; // 8 * 50 = 400 px
    }
  }
  
  customElements.define('strava-activity-card', StravaActivityCard);
```